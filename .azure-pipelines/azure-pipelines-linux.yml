# This file was generated automatically from conda-smithy. To update this configuration,
# update the conda-forge.yml and/or the recipe/meta.yaml.
# -*- mode: yaml -*-

jobs:
- job: linux
  pool:
    vmImage: ubuntu-latest
  strategy:
    matrix:
      linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.19python3.7.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.19python3.7.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.0
        SHORT_CONFIG: linux_64_cuda_compiler_version11.0c_h5ca3009d42
      linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.19python3.8.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.19python3.8.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.0
        SHORT_CONFIG: linux_64_cuda_compiler_version11.0c_h14ab4e2bae
      linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.19python3.9.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.19python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.0
        SHORT_CONFIG: linux_64_cuda_compiler_version11.0c_hc562fbd8e1
      linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.21python3.10.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.0cxx_compiler_version9numpy1.21python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.0
        SHORT_CONFIG: linux_64_cuda_compiler_version11.0c_ha2a0234ebf
      linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.19python3.7.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.19python3.7.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.1
        SHORT_CONFIG: linux_64_cuda_compiler_version11.1c_ha88665b93d
      linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.19python3.8.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.19python3.8.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.1
        SHORT_CONFIG: linux_64_cuda_compiler_version11.1c_h58307b8cd0
      linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.19python3.9.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.19python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.1
        SHORT_CONFIG: linux_64_cuda_compiler_version11.1c_hc724f17b04
      linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.21python3.10.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.1cxx_compiler_version10numpy1.21python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.1
        SHORT_CONFIG: linux_64_cuda_compiler_version11.1c_hf491c193dd
      linux_64_cuda_compiler_version11.2cxx_compiler_version10numpy1.19python3.7.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.2cxx_compiler_version10numpy1.19python3.7.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.2
        SHORT_CONFIG: linux_64_cuda_compiler_version11.2c_hb2f5880099
      linux_64_cuda_compiler_version11.2cxx_compiler_version10numpy1.19python3.8.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.2cxx_compiler_version10numpy1.19python3.8.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.2
        SHORT_CONFIG: linux_64_cuda_compiler_version11.2c_h6221023c73
      linux_64_cuda_compiler_version11.2cxx_compiler_version10numpy1.19python3.9.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.2cxx_compiler_version10numpy1.19python3.9.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.2
        SHORT_CONFIG: linux_64_cuda_compiler_version11.2c_h72a53f9ac7
      linux_64_cuda_compiler_version11.2cxx_compiler_version10numpy1.21python3.10.____cpython:
        CONFIG: linux_64_cuda_compiler_version11.2cxx_compiler_version10numpy1.21python3.10.____cpython
        UPLOAD_PACKAGES: 'True'
        DOCKER_IMAGE: quay.io/condaforge/linux-anvil-cuda:11.2
        SHORT_CONFIG: linux_64_cuda_compiler_version11.2c_h7cb3e98689
  timeoutInMinutes: 360

  steps:
  - script: |
         rm -rf /opt/ghc
         df -h
    displayName: Manage disk space

  # configure qemu binfmt-misc running.  This allows us to run docker containers
  # embedded qemu-static
  - script: |
      docker run --rm --privileged multiarch/qemu-user-static:register --reset --credential yes
      ls /proc/sys/fs/binfmt_misc/
    condition: not(startsWith(variables['CONFIG'], 'linux_64'))
    displayName: Configure binfmt_misc

  - script: |
        export CI=azure
        export GIT_BRANCH=$BUILD_SOURCEBRANCHNAME
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        if [[ "${BUILD_REASON:-}" == "PullRequest" ]]; then
          export IS_PR_BUILD="True"
        else
          export IS_PR_BUILD="False"
        fi
        .scripts/run_docker_build.sh
    displayName: Run docker build
    env:
      BINSTAR_TOKEN: $(BINSTAR_TOKEN)
      FEEDSTOCK_TOKEN: $(FEEDSTOCK_TOKEN)
      STAGING_BINSTAR_TOKEN: $(STAGING_BINSTAR_TOKEN)
  - script: |
        export CI=azure
        export CI_RUN_ID=$(build.BuildNumber).$(system.JobAttempt)
        export FEEDSTOCK_NAME=$(basename ${BUILD_REPOSITORY_NAME})
        export CONDA_BLD_DIR=build_artifacts
        export ARTIFACT_STAGING_DIR="$(Build.ArtifactStagingDirectory)"
        # Archive everything in CONDA_BLD_DIR except environments
        export BLD_ARTIFACT_PREFIX=conda_artifacts
        if [[ "$AGENT_JOBSTATUS" == "Failed" ]]; then
          # Archive the CONDA_BLD_DIR environments only when the job fails
          export ENV_ARTIFACT_PREFIX=conda_envs
        fi
        ./.scripts/create_conda_build_artifacts.sh
    displayName: Prepare conda build artifacts
    condition: succeededOrFailed()

  - task: PublishPipelineArtifact@1
    displayName: Store conda build artifacts
    condition: not(eq(variables.BLD_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(BLD_ARTIFACT_PATH)
      artifactName: $(BLD_ARTIFACT_NAME)

  - task: PublishPipelineArtifact@1
    displayName: Store conda build environment artifacts
    condition: not(eq(variables.ENV_ARTIFACT_PATH, ''))
    inputs:
      targetPath: $(ENV_ARTIFACT_PATH)
      artifactName: $(ENV_ARTIFACT_NAME)